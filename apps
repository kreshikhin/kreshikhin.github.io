<!DOCTYPE html><html lang="ru"><head><title>Денис Крешихин. Мои пет-проекты</title><meta charset="utf8"><meta name="description" content="Personal blog about an experience in software development and computer science"><meta name="keywords" content="programming languages, object oriented programming, functional programming, software design, haskell, rust, go, golang, ios, objective-c, swift"><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" type="image/png" href="public/images/favicon.png"><link rel="stylesheet" type="text/css" href="public/style.css"><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-43835648-1', 'auto');
ga('send', 'pageview');</script></head><body><div class="top-menu"><a class="author" href="https//kreshikhin.com">Денис Крешихин</a><ul class="active-apps"><li><a class="item-articles red" href="index.html">Статьи</a></li><li><a class="item-apps orange" href="apps.html">Пет-проекты</a></li><li><a class="item-about yellow active" href="about.html">Обо мне</a></li></ul></div><div class="left-menu"><div class="holder"><h1 class="author">Денис<br>Крешихин</h1><h2>iOS-разработчик с 15+ летним опытом</h2><h2>Тимлид/сеньор по обстоятельствам</h2><h2>Интересы: swift, uikit, rxswift, oop/ood, devops, agile</h2><ul class="active-apps"><li><a class="item-articles red" href="index.html">Статьи</a></li><li><a class="item-apps orange" href="apps.html">Пет-проекты</a></li><li><a class="item-about yellow" href="about.html">Обо мне</a></li><li><a class="green" href="https://github.com/kreshikhin">Github</a></li><li><a class="skyblue" href="https://twitter.com/kreshikhin">Twitter</a></li><li><a class="item-job blue" href="https://www.linkedin.com/in/denis-kreshikhin/">LinkedIn</a></li></ul><h4 style="color: gray">2024 © Денис Крешихин</h4></div></div><div class="content"><div class="articles"><div class="article"><h1><a href="art/golang-interface-adapter.html">Адаптер интерфейса в Go</a></h1><p><p>Так получилось, что в Go нет общепринятого подхода для написания обобщенных алгоритмов, типа темплейтов на которых строится STL в C++. Видимо, поэтому алгоритмические возможности стандартной библиотеки Go довольно ограничены. Для того что бы к коллекции применить какой-то алгоритм обычно требуется определять некоторый интерфейс, например, как это происходит при использовании сортировки <code>sort.Sort</code> из стандартной библиотеки. На примере этого интерфейса <code>sort.Interface</code> можно создать структуру-адаптер которая позволит применять функцию без явного определения новых методов.</p>
</p><div class="bottom"><span class="tag"><a href="tag/golang.html">golang</a></span><span class="tag"><a href="tag/go.html">go</a></span><span class="tag"><a href="tag/ood.html">ood</a></span><span class="tag"><a href="tag/oop.html">oop</a></span><span class="date">5-го февраля 2016</span><span class="date"><a href="art/golang-interface-adapter.html#disqus_thread">comment</a></span></div></div><div class="article"><h1><a href="art/golang-twitter-media-upload.html">Uploading video to Twitter with Go</a></h1><p><p>Уже почти год на Twitter можно заливать короткие видеоролики, более того возможность загрузки видео доступна из официального API.
Конечно, Twitter и раньше позволял отображать ролики из видеохостингов как Youtube и Vimeo, но нужно иметь ввиду, что в отличии от встроенных медиа эти ролики не воспроизводятся автоматически при прокрутке, что привлекает пользователь в меньшей степени.</p>
<p>В этой заметке я опишу как загруждать видео прямиком на Twitter.</p>
</p><div class="bottom"><span class="tag"><a href="tag/golang.html">golang</a></span><span class="tag"><a href="tag/go.html">go</a></span><span class="tag"><a href="tag/twitter.html">twitter</a></span><span class="tag"><a href="tag/media.html">media</a></span><span class="tag"><a href="tag/upload.html">upload</a></span><span class="date">20-го января 2016</span><span class="date"><a href="art/golang-twitter-media-upload.html#disqus_thread">comment</a></span></div></div><div class="article"><h1><a href="art/haskell-abstract-factory.html">Абстрактная фабрика на Haskell</a></h1><p><p>К функциональным языкам программирования я уже давно испытываю неподдельный интерес, особенно к ML-семейству и в частности к Haskell. Пожалуй такой же трепет я испытываю только к LISP-языкам. Но к сожалению практических книг по созданию приложений на Haskell очень и очень мало, поэтому я решил разбираться самостоятельно. На данный момент сделал набросок реализации <em>абстрактной фабрики</em> на Haskell. Потом попробую реализовать и другие ООП-паттерны в таком же виде как я сделал это для Go при написании хабростатьи  <a href="http://habrahabr.ru/post/240917/"><img style="width: 16px; display: inline" src="/images/xabr.png"> Язык Go: реабилитация императивного программирования</a>.</p>
</p><div class="bottom"><span class="tag"><a href="tag/haskell.html">haskell</a></span><span class="tag"><a href="tag/design.html">design</a></span><span class="date">25-го июля 2015</span><span class="date"><a href="art/haskell-abstract-factory.html#disqus_thread">comment</a></span></div></div><div class="article"><h1><a href="art/programming-and-turing.html">Программирование, искусственный интеллект и тезис Тьюринга-Чёрча</a></h1><p><p>Поучаствовал недавно в <a href="http://habrahabr.ru/company/parallels/blog/263409"><img style="width: 16px; display: inline" src="/images/xabr.png"> дискуссии на хабре</a> по поводу инженерности в программировании и будущего самого программирования. Конечно предсказывать будущее дело неблагодарное, тем не менее, что касается ценности программирования есть чёткие доводы, что в будущем это будет стольже актуально как и сейчас. Так же как и латинский алфавит подходит для письма не хуже чем 2к+ лет назад.</p>
</p><div class="bottom"><span class="tag"><a href="tag/programming.html">programming</a></span><span class="date">24-го июля 2015</span><span class="date"><a href="art/programming-and-turing.html#disqus_thread">comment</a></span></div></div><div class="article"><h1><a href="art/restful.html">Обработка ошибок в RESTful — приложениях</a></h1><p><p>За последнее время очень многие веб-фреймворки обзавелись RESTful роутингом. Более того, REST стал де-факто стандартом проектирования архитектуры веб-приложений. Практически все более-менее значимые сервисы обзавелись RESTful API с представлением данных через xml и json форматы. Такой популярности REST помогло как появление большого количества руководств, так и горячие обсуждения REST среди специалистов.</p>
<p>Вместе с тем, REST до сих пор воспринимается скорее как некоторый набор правил роутинга, а всё что не связано в прямую с роутингом решается произвольным путём, в частности это касается обработки ошибок в RESTful-приложениях.</p>
</p><div class="bottom"><span class="tag"><a href="tag/rest.html">rest</a></span><span class="tag"><a href="tag/restful.html">restful</a></span><span class="tag"><a href="tag/ruby.html">ruby</a></span><span class="tag"><a href="tag/rails.html">rails</a></span><span class="tag"><a href="tag/http.html">http</a></span><span class="date">8-го января 2014</span><span class="date"><a href="art/restful.html#disqus_thread">comment</a></span></div></div><div class="article"><h1><a href="art/bemless.html">Хорошие верстальщики отправляются на небеса, а плохие куда захотят. Или — почему БЭМ не приносит счастья?</a></h1><p><p>Все мы привыкли слышать поучительные разговоры о том &quot;как надо верстать&quot;, или о том &quot;как не надо&quot;. Иногда понятие &quot;как надо&quot; строится на объективных фактах, иногда на фактах которые скрыты где-то в глубине проблемы. Всё вместе это образует некоторые <i>правила вёрстки</i>, которыми и руководствуется верстальщик в своей повседневной работе.</p>
<p>Первоначально правила вёрстки были сродни искусству - ты мог делать что угодно, и никто тебя не останавливал, кроме возможностей веб-браузеров естественно. Потом эти п</p>
</p><div class="bottom"><span class="tag"><a href="tag/css.html">css</a></span><span class="tag"><a href="tag/less.html">less</a></span><span class="date">30-го ноября 2013</span><span class="date"><a href="art/bemless.html#disqus_thread">comment</a></span></div></div><div class="article"><h1><a href="art/composition.html">Статическая и динамическая композиции в c++</a></h1><p><p>Возможность метапрограммирования в c++ позволяет расширить тривиальные способы композиции классов, варьируя сцепленность и зависимость объектов.</p>
</p><div class="bottom"><span class="tag"><a href="tag/design.html">design</a></span><span class="tag"><a href="tag/cpp.html">cpp</a></span><span class="date">18-го сентября 2012</span><span class="date"><a href="art/composition.html#disqus_thread">comment</a></span></div></div><div class="article"><h1><a href="art/cohesion-vs-dependency.html">Зависимость (dependency) и сцепленность (cohesion) на примере MVC-архитектуры</a></h1><p><p>В объектно-ориентированном проектировании широко используются термины <em>зависимость</em> и <em>сцепленность</em>. Однако мало кто использует для оценки этих величин количественные показатели, несмотря на то что методы расчёта таких показателей хорошо описаны в литературе, например <a href="http://agile.csc.ncsu.edu/SEMaterials/OOMetrics.htm">здесь</a>. Но видимо, дело упирается в то, что существующие показатели не заслужили должного доверия, т.к. качество той или иной единицы проектирования зависит не только от объективных показателей, но и от ряда субъективных &mdash; аккуратности названия классов, их методов и переменных, компакности и чистоты логики, соответсвия общепринятым подходам.</p>
<p>Тем не менее, полезно представлять, какие проектные решения повышают сцепленность (что хорошо), а какие увеличивают зависимость (что плохо).</p>
</p><div class="bottom"><span class="tag"><a href="tag/design.html">design</a></span><span class="tag"><a href="tag/mvc.html">mvc</a></span><span class="date">25-го августа 2012</span><span class="date"><a href="art/cohesion-vs-dependency.html#disqus_thread">comment</a></span></div></div><div class="article"><h1><a href="art/haskell-ffi.html">Подключение c/c++ кода к haskell-проекту!</a></h1><p><p>Haskell один из быстроразвивающихся функциональных языков программирования. Возможно это один из тех функциональных языков которому вы хотите отдать предпочтение практического использования в ближайшее время.</p>
<p>Эта статья для тех, кто хотел бы опробовать Haskell на деле, но имеет горы полезного C и C++ кода с которым требуется считаться.</p>
</p><div class="bottom"><span class="tag"><a href="tag/haskell.html">haskell</a></span><span class="tag"><a href="tag/cpp.html">cpp</a></span><span class="date">5-го августа 2012</span><span class="date"><a href="art/haskell-ffi.html#disqus_thread">comment</a></span></div></div></div><script>/* * * CONFIGURATION VARIABLES * * */
var disqus_shortname = 'kreshikhin';

/* * * DON'T EDIT BELOW THIS LINE * * */
(function () {
    var s = document.createElement('script'); s.async = true;
    s.type = 'text/javascript';
    s.src = 'https://' + disqus_shortname + '.disqus.com/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
}());</script></div><!-- Yandex.Metrika counter--><script>(function (d, w, c) {
        (w[c] = w[c] || []).push(function() {
            try {
                w.yaCounter31572828 = new Ya.Metrika({
                    id:31572828,
                    clickmap:true,
                    trackLinks:true,
                    accurateTrackBounce:true
                });
            } catch(e) { }
        });

        var n = d.getElementsByTagName("script")[0],
            s = d.createElement("script"),
            f = function () { n.parentNode.insertBefore(s, n); };
        s.type = "text/javascript";
        s.async = true;
        s.src = "https://mc.yandex.ru/metrika/watch.js";

        if (w.opera == "[object Opera]") {
            d.addEventListener("DOMContentLoaded", f, false);
        } else { f(); }
    })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="https://mc.yandex.ru/watch/31572828" style="position:absolute; left:-9999px;" alt=""></div></noscript><!-- /Yandex.Metrika counter--></body></html>